{
  "name": "food-delivery-backend",
  "version": "1.0.0",
  "description": "A production-ready food delivery backend with microservices architecture",
  "main": "index.js",
  "scripts": {
    "install:all": "npm install && cd services/user-service && npm install && cd ../restaurant-service && npm install && cd ../delivery-agent-service && npm install",
    "build:all": "cd services/user-service && npm run build && cd ../restaurant-service && npm run build && cd ../delivery-agent-service && npm run build",
    "dev": "concurrently \"npm run dev:user\" \"npm run dev:restaurant\" \"npm run dev:delivery\"",
    "dev:user": "cd services/user-service && npm run dev",
    "dev:restaurant": "cd services/restaurant-service && npm run dev",
    "dev:delivery": "cd services/delivery-agent-service && npm run dev",
    "start": "node production-server.js",
    "start:microservices": "concurrently \"npm run start:user\" \"npm run start:restaurant\" \"npm run start:delivery\"",
    "start:user": "cd services/user-service && npm start",
    "start:restaurant": "cd services/restaurant-service && npm start",
    "start:delivery": "cd services/delivery-agent-service && npm start",
    "start:mock": "node simple-test-server.js",
    "test": "node comprehensive-api-test.js",
    "test:production": "node test-production-api.js",
    "test:microservices": "npm run test:user && npm run test:restaurant && npm run test:delivery",
    "test:user": "cd services/user-service && npm test",
    "test:restaurant": "cd services/restaurant-service && npm test",
    "test:delivery": "cd services/delivery-agent-service && npm test",
    "deploy:render": "echo 'Deploy to Render: Connect GitHub repo and set start command to: npm start'",
    "deploy:railway": "echo 'Deploy to Railway: Connect GitHub repo - auto deploys'",
    "deploy:vercel": "vercel --prod",
    "migrate": "cd services/user-service && npm run migrate",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down"
  },
  "keywords": [
    "food-delivery",
    "microservices",
    "typescript",
    "express",
    "postgresql",
    "redis",
    "kafka"
  ],
  "author": "Food Delivery Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "dependencies": {
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "cors": "^2.8.5",
    "express": "^5.1.0"
  }
}
